<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>孙浩华编程课程</title>
  
  <subtitle>上课时间：每天下午 1:00 - 6:00</subtitle>
  <link href="https://xuniversex.github.io/blog/atom.xml" rel="self"/>
  
  <link href="https://xuniversex.github.io/blog/"/>
  <updated>2024-02-12T13:26:52.475Z</updated>
  <id>https://xuniversex.github.io/blog/</id>
  
  <author>
    <name>Haohua Sun</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>只出现一次的数字</title>
    <link href="https://xuniversex.github.io/blog/2024/02/11/2/"/>
    <id>https://xuniversex.github.io/blog/2024/02/11/2/</id>
    <published>2024-02-11T06:22:54.000Z</published>
    <updated>2024-02-12T13:26:52.475Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Q136-只出现一次的数字"><a href="#Q136-只出现一次的数字" class="headerlink" title="[Q136]只出现一次的数字"></a>[Q136]只出现一次的数字</h1><hr><p>给定一个<strong>非空</strong>整数数组，除了某个元素只出现一次以外，其余每个元素均出现两次。找出那个只出现了一次的元素。</p><p><strong>说明：</strong></p><p>你的算法应该具有线性时间复杂度。 你可以不使用额外空间来实现吗？</p><p><strong>示例 1：</strong></p><ul><li><strong>输入：</strong>[2,2,1]</li><li><strong>输出：</strong> 1</li></ul><p><strong>示例 2：</strong></p><ul><li><strong>输入：</strong>[4,1,2,1,2]</li><li><strong>输出：</strong> 4</li></ul><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>a xor a &#x3D; 0<br>a xor b xor a &#x3D; b</p><p>题目中说明无关数字均出现2次，即将数组遍历并异或后结果为目标数字</p><hr><h3 id="Java代码实现"><a href="#Java代码实现" class="headerlink" title="Java代码实现"></a>Java代码实现</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">singleNumber</span><span class="params">(<span class="type">int</span>[] nums)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">single</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> num : nums)&#123;</span><br><span class="line">            <span class="comment">//single = single ^ num;</span></span><br><span class="line">            single ^= num;<span class="comment">//异或运算</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> single;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="复杂度分析"><a href="#复杂度分析" class="headerlink" title="复杂度分析"></a>复杂度分析</h3><ul><li>时间复杂度：O(n)。</li><li>空间复杂度：O(1)。</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Q136-只出现一次的数字&quot;&gt;&lt;a href=&quot;#Q136-只出现一次的数字&quot; class=&quot;headerlink&quot; title=&quot;[Q136]只出现一次的数字&quot;&gt;&lt;/a&gt;[Q136]只出现一次的数字&lt;/h1&gt;&lt;hr&gt;
&lt;p&gt;给定一个&lt;strong&gt;非空&lt;/str</summary>
      
    
    
    
    
    <category term="Day 2" scheme="https://xuniversex.github.io/blog/tags/Day-2/"/>
    
  </entry>
  
  <entry>
    <title>简单的括号匹配</title>
    <link href="https://xuniversex.github.io/blog/2024/02/10/1/"/>
    <id>https://xuniversex.github.io/blog/2024/02/10/1/</id>
    <published>2024-02-10T07:52:03.000Z</published>
    <updated>2024-02-12T13:26:45.200Z</updated>
    
    <content type="html"><![CDATA[<p><strong>[Q20]</strong><br>给定一个只包括 ‘(‘，’)’，’{‘，’}’，’[‘，’]’ 的字符串 s ，判断字符串是否有效。<br>有效字符串需满足:</p><ol><li>左括号必须用相同类型的右括号闭合。</li><li>左括号必须以正确的顺序闭合。</li></ol><h3 id="Java代码实现"><a href="#Java代码实现" class="headerlink" title="Java代码实现"></a>Java代码实现</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isValid</span><span class="params">(String s)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span>(s == <span class="literal">null</span> || s.length() == <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;    <span class="comment">// null和0返回true</span></span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(s.length() % <span class="number">2</span> != <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;<span class="comment">//括号数量为奇数返回false</span></span><br><span class="line">        &#125;</span><br><span class="line">   </span><br><span class="line">   Map&lt;Character, Character&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;()&#123;&#123;</span><br><span class="line">            put(<span class="string">&#x27;]&#x27;</span>, <span class="string">&#x27;[&#x27;</span>);</span><br><span class="line">            put(<span class="string">&#x27;)&#x27;</span>, <span class="string">&#x27;(&#x27;</span>);</span><br><span class="line">            put(<span class="string">&#x27;&#125;&#x27;</span>, <span class="string">&#x27;&#123;&#x27;</span>);</span><br><span class="line">    &#125;&#125;;</span><br><span class="line">    Stack&lt;Character&gt; stack = <span class="keyword">new</span> <span class="title class_">Stack</span>&lt;&gt;(); </span><br><span class="line">    </span><br><span class="line">    <span class="comment">//foreach循环遍历字符数组</span></span><br><span class="line">   <span class="keyword">for</span>(<span class="type">char</span> c : s.toCharArray())&#123;</span><br><span class="line">   <span class="keyword">if</span>(map.containsKey(c))&#123;</span><br><span class="line">   <span class="keyword">if</span>(stack.empty() || map.get(c) != stack.pop())&#123;</span><br><span class="line">                   <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">   &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">   stack.push(c);</span><br><span class="line">   &#125;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">return</span> stack.empty();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="注意："><a href="#注意：" class="headerlink" title="注意："></a>注意：</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(stack.empty() || map.get(c) != stack.pop())&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在有后括号未匹配的情况下：</p><ul><li>栈已空</li><li>栈顶中前括号与该后括号不匹配</li></ul><p>就返回false</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;[Q20]&lt;/strong&gt;&lt;br&gt;给定一个只包括 ‘(‘，’)’，’{‘，’}’，’[‘，’]’ 的字符串 s ，判断字符串是否有效。&lt;br&gt;有效字符串需满足:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;左括号必须用相同类型的右括号闭合。&lt;/li&gt;
&lt;li&gt;左括号必须以正</summary>
      
    
    
    
    
    <category term="Day 1" scheme="https://xuniversex.github.io/blog/tags/Day-1/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://xuniversex.github.io/blog/2024/02/09/hello-world/"/>
    <id>https://xuniversex.github.io/blog/2024/02/09/hello-world/</id>
    <published>2024-02-09T07:52:03.000Z</published>
    <updated>2024-02-12T13:27:57.840Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
